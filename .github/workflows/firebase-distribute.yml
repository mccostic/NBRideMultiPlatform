name: Android Firebase Distribution

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  distribute:
    runs-on: ubuntu-latest

    env:
      JAVA_VERSION: '17'
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxMetaspaceSize=1g"
      GIT_SHA: ${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3

      # --- Firebase Service Account JSON (from secret) ---
      - name: Write Firebase service account file
        run: |
          mkdir -p "$GITHUB_WORKSPACE/ci"
          # Write secret to file
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}" > "$GITHUB_WORKSPACE/ci/firebase-sa.json"
          # Export for SDKs that look for this
          echo "GOOGLE_APPLICATION_CREDENTIALS=$GITHUB_WORKSPACE/ci/firebase-sa.json" >> $GITHUB_ENV

      # --- Prepare Android signing (optional; only if secrets are present) ---
      # No "if:" on step â€“ do conditional logic inside bash to avoid validator errors.
      - name: Prepare Android signing (optional)
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          mkdir -p "$GITHUB_WORKSPACE/ci"

          if [ -n "$ANDROID_KEYSTORE_BASE64" ]; then
            echo "Decoding keystore from ANDROID_KEYSTORE_BASE64"
            echo "$ANDROID_KEYSTORE_BASE64" | base64 --decode > "$GITHUB_WORKSPACE/ci/ci-keystore.jks"
          else
            echo "No keystore secret present; will use debug signing."
          fi

          # Export passwords as env for Gradle, if present
          if [ -n "$ANDROID_KEYSTORE_PASSWORD" ]; then
            echo "ANDROID_KEYSTORE_PASSWORD=$ANDROID_KEYSTORE_PASSWORD" >> $GITHUB_ENV
          fi
          if [ -n "$ANDROID_KEY_ALIAS" ]; then
            echo "ANDROID_KEY_ALIAS=$ANDROID_KEY_ALIAS" >> $GITHUB_ENV
          fi
          if [ -n "$ANDROID_KEY_PASSWORD" ]; then
            echo "ANDROID_KEY_PASSWORD=$ANDROID_KEY_PASSWORD" >> $GITHUB_ENV
          fi

      # --- Build Beta ---
      - name: Build Beta
        run: ./gradlew :composeApp:assembleBeta

      # --- Upload to Firebase App Distribution ---
      - name: Distribute to Firebase (Beta)
        env:
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_ANDROID_APP_ID }}   # looks like: 1:1234567890:android:abc...
        run: |
          ./gradlew \
            -PfirebaseAppDistribution.appId="$FIREBASE_APP_ID" \
            -PfirebaseAppDistribution.serviceCredentialsFile="$GITHUB_WORKSPACE/ci/firebase-sa.json" \
            -PfirebaseAppDistribution.releaseNotes="Build $GITHUB_RUN_NUMBER - $GIT_SHA" \
            :composeApp:appDistributionUploadBeta