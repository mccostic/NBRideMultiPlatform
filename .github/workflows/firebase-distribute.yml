name: Android Firebase Distribution

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  distribute:
    runs-on: ubuntu-latest
    env:
      JAVA_VERSION: '17'
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxMetaspaceSize=1g"
      GIT_SHA: ${{ github.sha }}
      GIT_MESSAGE: ${{ github.event.head_commit.message }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3

      - name: Check required secrets
        env:
          FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
          FIREBASE_ANDROID_APP_ID: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
        run: |
          if [ -z "$FIREBASE_SERVICE_ACCOUNT_JSON" ]; then
            echo "::error::Missing secret FIREBASE_SERVICE_ACCOUNT_JSON"
            exit 1
          fi
          if [ -z "$FIREBASE_ANDROID_APP_ID" ]; then
            echo "::error::Missing secret FIREBASE_ANDROID_APP_ID"
            exit 1
          fi

      - name: Write Firebase service account file
        env:
          FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
        run: |
          mkdir -p "$GITHUB_WORKSPACE/ci"
          echo "$FIREBASE_SERVICE_ACCOUNT_JSON" > "$GITHUB_WORKSPACE/ci/firebase-sa.json"
          echo "GOOGLE_APPLICATION_CREDENTIALS=$GITHUB_WORKSPACE/ci/firebase-sa.json" >> $GITHUB_ENV

      - name: Prepare Android signing (optional)
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE4 }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          set -e
          mkdir -p "$GITHUB_WORKSPACE/ci"
          if [ -n "$ANDROID_KEYSTORE_BASE64" ]; then
            echo "Decoding CI keystore"
            if ! printf '%s' "$ANDROID_KEYSTORE_BASE64" | base64 --decode > "$GITHUB_WORKSPACE/ci/ci-keystore.jks"; then
              printf '%s' "$ANDROID_KEYSTORE_BASE64" | base64 -d > "$GITHUB_WORKSPACE/ci/ci-keystore.jks"
            fi
            ls -l "$GITHUB_WORKSPACE/ci/ci-keystore.jks"
            [ -n "$ANDROID_KEYSTORE_PASSWORD" ] && echo "ANDROID_KEYSTORE_PASSWORD=$ANDROID_KEYSTORE_PASSWORD" >> $GITHUB_ENV
            [ -n "$ANDROID_KEY_ALIAS" ] && echo "ANDROID_KEY_ALIAS=$ANDROID_KEY_ALIAS" >> $GITHUB_ENV
            [ -n "$ANDROID_KEY_PASSWORD" ] && echo "ANDROID_KEY_PASSWORD=$ANDROID_KEY_PASSWORD" >> $GITHUB_ENV
          else
            echo "No keystore provided; debug signing will be used."
          fi

      - name: Build Beta
        run: |
          BUILD_TYPE=beta
          VERSION_CODE=${{ github.run_number }}
          VERSION_NAME="1.2.3.0-${BUILD_TYPE}(${VERSION_CODE})"
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV
          echo "Building app with versionName=$VERSION_NAME and versionCode=$VERSION_CODE"
          ./gradlew :composeApp:assembleBeta \
            -PversionCode=$VERSION_CODE \
            -PversionName=$VERSION_NAME

      - name: Distribute to Firebase (Beta)
        env:
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
        run: |
          if [ -z "$FIREBASE_APP_ID" ]; then
            echo "::error::FIREBASE_APP_ID is empty. Check the FIREBASE_ANDROID_APP_ID secret."
            exit 1
          fi
          echo "ðŸš€ Distributing $VERSION_NAME"
          ./gradlew \
            -PfirebaseAppDistribution.appId="$FIREBASE_APP_ID" \
            -PfirebaseAppDistribution.serviceCredentialsFile="$GITHUB_WORKSPACE/ci/firebase-sa.json" \
            -PfirebaseAppDistribution.releaseNotes="Commit: $GIT_MESSAGE | Build $GITHUB_RUN_NUMBER - $GIT_SHA" \
            :composeApp:appDistributionUploadBeta